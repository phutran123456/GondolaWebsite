import { Client, RectReturn } from "webdriver";
import { Browser } from "webdriverio";
import { IGondolaMobile, IRect } from "../builtin";
declare const Appium: any;
export declare class AppiumEx extends Appium implements IGondolaMobile {
    private mainBrowser?;
    private browser?;
    private $$;
    _startBrowser(): Promise<void>;
    _after(): Promise<void>;
    tap(element: string | ILocator): Promise<any>;
    runOnAndroid(options?: any, fn?: Function): Promise<void>;
    runOnIOS(options?: any, fn?: Function): Promise<void>;
    checkAppIsInstalled(appPackageId: string): Promise<void>;
    getCurrentBrowser(): Promise<Client & Browser>;
    sendDeviceKeyEvent(keyValue: number): Promise<void>;
    fillField(element: string | ILocator, value: string): Promise<void>;
    swipe(element: string | ILocator, offsetX: number, offsetY: number, duration?: number): Promise<void>;
    swipeByCoordinates(startX: number, startY: number, offsetX: number, offsetY: number, duration?: number): Promise<void>;
    saveScreenshot(fileName: string, fullPage?: boolean): Promise<void>;
    getElementBounds(element: string | ILocator): Promise<IRect>;
    grabNumberOfVisibleElements(element: string | ILocator): Promise<any>;
    grabAttributeFrom(element: string | ILocator, attr: string): Promise<any>;
    hideDeviceKeyboard(strategy?: string, key?: string): Promise<void>;
    getDeviceScreenSize(): Promise<RectReturn>;
    getAllContexts(): Promise<string[]>;
    getContext(): Promise<string>;
    switchToContext(context: string): Promise<any>;
    executeCommand(command: string, args?: Array<string | object | number | boolean | undefined>): Promise<any>;
    setPickerValue(element: string | ILocator, values: string | Array<string | undefined>): Promise<void>;
    private delay;
    private _getElementLocation;
    private _getElementSize;
    private _isMultiRemote;
    private _parseLocator;
    private _assertEmptyLocator;
}
export {};
