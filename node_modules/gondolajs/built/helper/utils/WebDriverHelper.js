"use strict";var __importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)Object.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t.default=e,t};Object.defineProperty(exports,"__esModule",{value:!0});const errors=__importStar(require("../../errors")),WebUtils_1=require("./WebUtils"),ElementNotFound=require("codeceptjs/lib/helper/errors/ElementNotFound"),{xpathLocator:xpathLocator}=require("codeceptjs/lib/utils"),Locator=require("codeceptjs/lib/locator"),{debug:debug}=require("codeceptjs/lib/output");function prepareLocateFn(e){return e?t=>(t=new Locator(t,"css"),this._locate(e,!0).then(async i=>(assertElementExists(i,e,"Context element"),t.react?i[0].react$$(t.react,t.props||void 0):i[0].$$(t.simplify())))):this._locate.bind(this)}function assertElementExists(e,t,i,a){if(!e||0===e.length)throw new ElementNotFound(t,i,a)}async function findClickable(e,t){if((e=new Locator(e)).isAccessibilityId()&&!this.isWeb)return await t.call(this,e,!0);if(!e.isFuzzy())return await t.call(this,e,!0);let i;const a=xpathLocator.literal(e.value);return i=await t.call(this,Locator.clickable.narrow(a)),i.length?i:(i=await t.call(this,Locator.clickable.wide(a)),i.length?i:(i=await t.call(this,Locator.clickable.self(a)),i.length?i:await t.call(this,e.value)))}function usingFirstElement(e){return e.length>1&&debug("[Elements] Using first element out of "+e.length),e[0]}async function rightClick(e,t,i){const a=await locateElement(e,t,i);await a.moveTo(),await a.click({button:2})}async function rightClickByJS(e,t,i){const a=prepareLocateFn.call(e,i),n=await findClickable.call(e,t,a);i?assertElementExists(n,t,"Clickable element","was not found inside element "+new Locator(i)):assertElementExists(n,t,"Clickable element");const l=usingFirstElement(n);await l.moveTo(),await e.executeScript(e=>{const t=new MouseEvent("contextmenu",{view:window,bubbles:!0,cancelable:!0});e.dispatchEvent(t)},l)}async function doubleClick_safari(e,t,i){const a=await locateElement(e,t,i);await e.executeScript(e=>{const t=new MouseEvent("dblclick",{view:window,bubbles:!0,cancelable:!0});e.dispatchEvent(t)},a)}async function clickMobileWeb(e,t,i){const a=await locateElement(e,t,i);return e.browser.elementClick(WebUtils_1.getElementId(a))}async function clickSafari(e,t,i){var a,n,l;const r=await locateElement(e,t,i);if(!await r.isEnabled())throw new errors.GError(errors.GErrorKey.DisabledElementErr,t);!1===await r.isDisplayedInViewport()&&await r.scrollIntoView();const o=WebUtils_1.getElementId(r);return(null===(l=null===(n=null===(a=e.browser)||void 0===a?void 0:a.capabilities)||void 0===n?void 0:n.browserVersion)||void 0===l?void 0:l.startsWith("13.0"))?clickSafari_13_0_x(e,o):e.browser.elementClick(o)}async function clickSafari_13_0_x(e,t){const i=e.browser;let a={x:0,y:0};if(i.getElementLocationInView){const e=await i.getElementLocationInView(t),n=await i.getElementSize(t);a={x:e.x+n.width/2,y:e.y+n.height/2}}else if(i.getElementRect){const e=await i.getElementRect(t);a={x:Math.floor(e.x+e.width/2),y:Math.floor(e.y+e.height/2)}}if(i.isW3C)return await i.performActions([{type:"pointer",id:"mouse0",parameters:{pointerType:"mouse"},actions:[{type:"pointerMove",duration:0,x:a.x,y:a.y},{type:"pointerDown",button:0},{type:"pause",duration:500},{type:"pointerUp",button:0}]}]);await i.moveToElement(null,a.x,a.y),await i.buttonDown(0),await i.buttonUp(0),await i.moveToElement(null,0,0)}async function clickSafariByJS(e,t,i){const a=await locateElement(e,t,i);if(!await a.isEnabled())throw new errors.GError(errors.GErrorKey.DisabledElementErr,t);!1===await a.isDisplayedInViewport()&&await a.scrollIntoView(),await e.executeScript(e=>{const t=new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0});e.dispatchEvent(t)},a)}async function locateElement(e,t,i){const a=prepareLocateFn.call(e,i),n=await findClickable.call(e,t,a);i?assertElementExists(n,t,"Clickable element","was not found inside parent element "+new Locator(i)):assertElementExists(n,t,"Clickable element");return usingFirstElement(n)}exports.prepareLocateFn=prepareLocateFn,exports.assertElementExists=assertElementExists,exports.findClickable=findClickable,exports.usingFirstElement=usingFirstElement,exports.rightClick=rightClick,exports.rightClickByJS=rightClickByJS,exports.doubleClick_safari=doubleClick_safari,exports.clickMobileWeb=clickMobileWeb,exports.clickSafari=clickSafari,exports.clickSafariByJS=clickSafariByJS;
//# sourceMappingURL=../../../debug/helper/utils/WebDriverHelper.js.map
