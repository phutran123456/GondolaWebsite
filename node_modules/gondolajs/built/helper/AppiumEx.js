"use strict";var __decorate=this&&this.__decorate||function(t,e,r,o){var i,a=arguments.length,n=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(t,e,r,o);else for(var s=t.length-1;s>=0;s--)(i=t[s])&&(n=(a<3?i(n):a>3?i(e,r,n):i(e,r))||n);return a>3&&n&&Object.defineProperty(e,r,n),n},__importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}},__importStar=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)Object.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e.default=t,e};Object.defineProperty(exports,"__esModule",{value:!0});const assert_1=__importDefault(require("assert")),util_1=require("util"),deco_1=require("../deco"),errors=__importStar(require("../errors")),util_2=require("./../util"),Utils=__importStar(require("./utils/WebUtils")),ElementNotFound=require("codeceptjs/lib/helper/errors/ElementNotFound"),Appium=require("codeceptjs/lib/helper/Appium"),Locator=require("codeceptjs/lib/locator");class AppiumEx extends Appium{async _startBrowser(){await super._startBrowser(),this._isMultiRemote()&&(this.mainBrowser=this.browser)}async _after(){this._isMultiRemote()&&(this.browser=this.mainBrowser,this.$$=this.browser.$$.bind(this.browser)),await super._after()}async tap(t){this._assertEmptyLocator(t);let e=[];try{e=await this._locate(this._parseLocator.call(this,t),!0)}catch(e){throw new errors.ElementNotFoundError(util_2.getLocatorString(t))}if(0===e.length)throw new errors.ElementNotFoundError(util_2.getLocatorString(t));if(!this.isWeb)return this.browser.touchAction({action:"tap",element:e[0]});{const t=e[0],r=Utils.getElementId(t);!1===await t.isDisplayedInViewport()&&await t.scrollIntoView(),await this.browser.elementClick(r)}}async runOnAndroid(t,e){await super.runOnAndroid(t,e)}async runOnIOS(t,e){await super.runOnIOS(t,e)}async checkAppIsInstalled(t){const e=await this.browser.isAppInstalled(t),r=new errors.AppNotInstalled(t).message;assert_1.default.equal(e,!0,r)}async getCurrentBrowser(){return this.browser}async sendDeviceKeyEvent(t){if(util_1.isNullOrUndefined(t))throw new errors.GError(errors.GErrorKey.ArgKeyValueNotSet);return await super.sendDeviceKeyEvent(t)}async fillField(t,e){let r=[];if(r=this.isWeb?await this._locate(t,!0):await this._locate(this._parseLocator.call(this,t),!0),0===r.length)throw new errors.ElementNotFoundError(util_2.getLocatorString(t));const o=r[0];if(!await o.isEnabled())throw new errors.GError(errors.GErrorKey.EnterDisableElementErr,t);if(!await o.isDisplayed())throw new errors.GError(errors.GErrorKey.ElementNotEnabledOrDisplayed,t);await super.fillField(t,e)}async swipe(t,e,r,o){const i=await this.getElementBounds(t),a=i.left+i.width/2,n=i.top+i.height/2;await this.swipeByCoordinates(a,n,e,r,o)}async swipeByCoordinates(t,e,r,o,i){try{if(t<0||e<0)throw new errors.NegativeNumberError;if(i&&i<=0)throw new errors.NegativeNumberError;let a=1e3;void 0!==i&&(a=1e3*i);const n={x:t,y:e},s={x:t+r,y:e+o};await this.browser.touchPerform([{action:"press",options:n},{action:"wait",options:{ms:Math.floor(a)}},{action:"moveTo",options:s},{action:"release"}])}catch(t){if(t.name&&t.name.match(/invalid coordinates/gi))throw new errors.GError(errors.GErrorKey.SwipeOffofScreen);throw t}}async saveScreenshot(t,e){await super.saveScreenshot(t,!1)}async getElementBounds(t){this._assertEmptyLocator(t);let e=[];try{e=this.isWeb?await this._locate(t,!0):await this._locate(this._parseLocator.call(this,t),!0)}catch(e){throw new ElementNotFound(util_2.getLocatorString(t))}if(0===e.length)throw new errors.ElementNotFoundError(util_2.getLocatorString(t));const r=e[0],o=await this._getElementLocation(r),i=o.x,a=o.y,n=await this._getElementSize(r);return{left:i,top:a,width:n.width,height:n.height}}async grabNumberOfVisibleElements(t){return this.isWeb?await super.grabNumberOfVisibleElements(t):await super.grabNumberOfVisibleElements(this._parseLocator.call(this,t))}async grabAttributeFrom(t,e){return this.isWeb?await super.grabAttributeFrom(t,e):await super.grabAttributeFrom(this._parseLocator.call(this,t),e)}async hideDeviceKeyboard(t,e){if("gTapOut"!==t)await super.hideDeviceKeyboard(t,e);else{await super.hideDeviceKeyboard(void 0,e);let t=!0;const r=Date.now();for(;"ios"===this.platform&&Date.now()<r+2e3&&t;)t=await this.browser.isKeyboardShown();if(t&&"ios"===this.platform){const t=await this._locate({className:"XCUIElementTypeKeyboard"},!0);if(t&&t.length>0){const e=await t[0].getLocation();await this.browser.touchPerform([{action:"tap",options:{x:-100,y:e.y}}])}}}}async getDeviceScreenSize(){const t=await this.getCurrentBrowser();return await t.getWindowSize()}async getAllContexts(){return super.grabAllContexts()}async getContext(){return super.grabContext()}async switchToContext(t){if(""===t)throw new errors.InvalidInputArgumentError("context");return super._switchToContext(t)}async executeCommand(t,e){if(""===t)throw new errors.InvalidInputArgumentError("command");const r=await this.getCurrentBrowser();return e?r.executeScript(t,e):r.executeScript(t,[])}async setPickerValue(t,e){if(0===e.length)throw new errors.InvalidInputArgumentError("value");let r=[];if(r=this.isWeb?await this._locate(t,!0):await this._locate(this._parseLocator.call(this,t),!0),0===r.length)throw new errors.ElementNotFoundError(util_2.getLocatorString(t));const o=r[0];let i=[];if("ios"===this.platform?i=await o.$$("//XCUIElementTypePickerWheel"):"android"===this.platform&&(i=await o.$$("//android.widget.NumberPicker")),0===i.length)throw new errors.ElementNotSupportError(util_2.getLocatorString(t));if(e instanceof Array&&i.length!==e.length)throw new errors.InvalidInputArgumentError(e.toString());const a=await this.getCurrentBrowser();for(let t=0;t<i.length;t++){if(void 0===e[t])continue;let r;r=e instanceof Array?e[t]:e;try{let o;if("ios"===this.platform)await a.setValueImmediate(i[t].elementId,r),o=await i[t].getText();else if("android"===this.platform){const e=await i[t].$$("//*");if(0===e.length)throw new errors.ElementNotFoundError(util_2.getLocatorString(i[t]));let a=e[e.length/2];const n=await a.getText();o=await a.getText();let s=!1,l=!1;for(;o!==r&&!l;){let t=e[e.length/2+1],r=e[e.length/2-1];const i=o;if(n!==await t.getText()&&!1===s){await this.browser.touchAction({action:"tap",element:t}),await this.delay(100),a=e[e.length/2],o=await a.getText(),t=e[e.length/2+1];await t.getText()===n&&(l=!0)}i===o&&(s=!0,r=e[e.length/2-1],await this.browser.touchAction({action:"tap",element:r}),await this.delay(100),a=e[e.length/2],o=await a.getText(),i===o&&(l=!0))}}if(o!==r)throw e instanceof Array?new errors.ValueNotMatchAtIndexError(util_2.getLocatorString((t+1).toString())):new errors.ValueNotMatchError(util_2.getLocatorString(r))}catch(t){throw t}}}async delay(t){return new Promise(e=>setTimeout(e,t))}async _getElementLocation(t){return await t.getLocation()}async _getElementSize(t){return await t.getSize()}_isMultiRemote(){return this.config.multiremote}_parseLocator(t){if(!t)return null;if("object"==typeof t){if(t.web&&this.isWeb)return this._parseLocator.call(this,t.web);if(t.android&&"android"===this.platform)return this._parseLocator.call(this,t.android);if(t.ios&&"ios"===this.platform)return this._parseLocator.call(this,t.ios)}if("string"==typeof t){if("~"===t[0])return t;if("//"===t.substr(0,2))return t;if("#"===t[0]&&!this.isWeb)return this._parseLocator.call(this,{id:t.slice(1)});if("android"===this.platform&&!this.isWeb)return`android=new UiSelector().text("${t}")`;if("ios"===this.platform&&!this.isWeb)return`//*[@value='${t}' or @label='${t}']`}if("css"===(t=new Locator(t,"xpath")).type&&!this.isWeb)throw new errors.GError(errors.GErrorKey.UsingCSSLocatorInApp);if("name"===t.type&&!this.isWeb)throw new errors.GError(errors.GErrorKey.UsingNameLocatorInNative);return"id"!==t.type||this.isWeb||"android"!==this.platform?t.simplify():`//*[@resource-id='${t.value}']`}_assertEmptyLocator(t){if(util_2.isEmpty(t))throw new errors.LocatorEmptyError}}__decorate([deco_1.action("tap","")],AppiumEx.prototype,"tap",null),__decorate([deco_1.action("run on Android","")],AppiumEx.prototype,"runOnAndroid",null),__decorate([deco_1.action("run on IOS","")],AppiumEx.prototype,"runOnIOS",null),__decorate([deco_1.action("check app is installed","")],AppiumEx.prototype,"checkAppIsInstalled",null),__decorate([deco_1.action("get current browser","")],AppiumEx.prototype,"getCurrentBrowser",null),__decorate([deco_1.action("send device key event","")],AppiumEx.prototype,"sendDeviceKeyEvent",null),__decorate([deco_1.action("fillField","")],AppiumEx.prototype,"fillField",null),__decorate([deco_1.action("swipe","")],AppiumEx.prototype,"swipe",null),__decorate([deco_1.action("swipe by coordinates","")],AppiumEx.prototype,"swipeByCoordinates",null),__decorate([deco_1.action("save screen shot","")],AppiumEx.prototype,"saveScreenshot",null),__decorate([deco_1.action("get element bounds","")],AppiumEx.prototype,"getElementBounds",null),__decorate([deco_1.action("grab number of visible elements","")],AppiumEx.prototype,"grabNumberOfVisibleElements",null),__decorate([deco_1.action("grab attribute from","")],AppiumEx.prototype,"grabAttributeFrom",null),__decorate([deco_1.action("hide device keyboard","")],AppiumEx.prototype,"hideDeviceKeyboard",null),__decorate([deco_1.action("get device screen size","")],AppiumEx.prototype,"getDeviceScreenSize",null),__decorate([deco_1.action("get all contexts","")],AppiumEx.prototype,"getAllContexts",null),__decorate([deco_1.action("get context","")],AppiumEx.prototype,"getContext",null),__decorate([deco_1.action("switch to context","")],AppiumEx.prototype,"switchToContext",null),__decorate([deco_1.action("execute command","")],AppiumEx.prototype,"executeCommand",null),__decorate([deco_1.action("set picker value","")],AppiumEx.prototype,"setPickerValue",null),exports.AppiumEx=AppiumEx,module.exports=AppiumEx;
//# sourceMappingURL=../../debug/helper/AppiumEx.js.map
