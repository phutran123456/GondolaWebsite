"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const assert_1=__importDefault(require("assert")),fs_1=__importDefault(require("fs")),mkdirp_1=__importDefault(require("mkdirp")),path_1=require("path"),resemble=require("resemblejs");class ResembleHelper extends Helper{constructor(e){super(),this.config=e,this.config=e}async seeVisualDiff(e,r){void 0===r&&((r={}).tolerance=0),void 0!==r.prepareBaseImage&&r.prepareBaseImage&&await this._prepareBaseImage(e);const t=await this._fetchMisMatchPercentage(e,r);this.config.consoleOutput&&console.log("MisMatch Percentage Calculated is "+t),assert_1.default(t<=r.tolerance,"MissMatch Percentage "+t)}async seeVisualDiffForElement(e,r,t){if(void 0===e)return null;{void 0===t&&((t={}).tolerance=0),void 0!==t.prepareBaseImage&&t.prepareBaseImage&&await this._prepareBaseImage(r),t.boundingBox=await this._getBoundingBox(e);const s=await this._fetchMisMatchPercentage(r,t);this.config.consoleOutput&&console.log("MisMatch Percentage Calculated is "+s),assert_1.default(s<=t.tolerance,"MissMatch Percentage "+s)}}async _prepareBaseImage(e){const r=this.config;await this._createDir(r.baseFolder+e),fs_1.default.access(r.screenshotFolder+e,fs_1.default.constants.F_OK|fs_1.default.constants.W_OK,t=>{t&&console.error(`${r.screenshotFolder+e} ${"ENOENT"===t.code?"does not exist":"is read-only"}`)}),fs_1.default.access(r.baseFolder,fs_1.default.constants.F_OK|fs_1.default.constants.W_OK,e=>{e&&console.error(`${r.baseFolder} ${"ENOENT"===e.code?"does not exist":"is read-only"}`)}),fs_1.default.copyFileSync(r.screenshotFolder+e,r.baseFolder+e)}async _createDir(e){mkdirp_1.default.sync(path_1.dirname(e))}async _compareImages(e,r,t,s){return e=this.config.baseFolder+e,r=this.config.screenshotFolder+r,void 0===typeof this.config.consoleOutput&&(this.config.consoleOutput=!0),new Promise((o,a)=>{void 0!==s.boundingBox&&resemble.outputSettings({errorColor:{blue:111,green:111,red:111},errorType:"errorType",largeImageThreshold:1,transparency:1});const i=s.tolerance||0;void 0!==s.tolerance&&this.config.consoleOutput&&console.log("Tolerance Level Provided "+s.tolerance),resemble.compare(e,r,s,(e,r)=>{e?a(e):(o(r),r.misMatchPercentage>=i&&(mkdirp_1.default(path_1.dirname(this.config.diffFolder+t),e=>{if(e)return e}),fs_1.default.writeFile(this.config.diffFolder+t+".png",r.getBuffer(),e=>{if(e)throw new Error(e)})))})}).catch(e=>{console.log("caught",e.message)})}async _fetchMisMatchPercentage(e,r){const t=e,s="Diff_"+e.split(".")[0],o=this._compareImages(e,t,s,r);return(await Promise.resolve(o)).misMatchPercentage}async _getBoundingBox(e){const r=this._getBrowser();let t;if(this.helpers.WebDriver)t=await r.$(e);else try{t=(await this.helpers.Protractor._locate(e,!0))[0]}catch(e){console.log(e)}const s=await t.getSize(),o=await t.getLocation(),a=s.height+o.y,i=s.width+o.x;return{left:o.x,top:o.y,right:i,bottom:a}}_getBrowser(){if(this.helpers.Protractor)return this.helpers.Protractor.browser;if(this.helpers.WebDriver)return this.helpers.WebDriver.browser;if(this.helpers.Appium)return this.helpers.Appium.browser;if(this.helpers.WebDriverIO)return this.helpers.WebDriverIO.browser;throw new Error("No matching helper found. Supported helpers: WebDriver/Appium/WebDriverIO")}}exports.ResembleHelper=ResembleHelper,module.exports=ResembleHelper;
//# sourceMappingURL=../../debug/helper/ResembleHelper.js.map
