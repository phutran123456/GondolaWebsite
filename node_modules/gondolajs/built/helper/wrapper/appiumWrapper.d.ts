import { IRect, IScrollIntoViewOptions } from "../../builtin";
declare class AppiumWrapper {
    helper: any;
    enter(element: string | ILocator, value: string): Promise<any>;
    getControlProperty(selectLocator: string | ILocator, propName: string): Promise<any>;
    getElementBounds(element: string | ILocator): Promise<IRect>;
    selectByIndex(locator: string | ILocator, index: number): Promise<any>;
    scrollIntoView(locator: string | ILocator, scrollIntoViewOptions?: boolean | IScrollIntoViewOptions): Promise<void>;
    setState(locator: string | ILocator, state: boolean): Promise<void>;
    waitForElementProperty(locator: string | ILocator, propName: string, propValue: any, timeOut: number, context?: string | ILocator): Promise<void>;
    waitForValueChanged(locator: string | ILocator, propName: string, timeOut: number, oldValue?: any): Promise<void>;
    private getElementProperty;
}
declare const _default: AppiumWrapper;
export default _default;
