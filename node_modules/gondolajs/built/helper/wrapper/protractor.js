"use strict";var __importDefault=this&&this.__importDefault||function(r){return r&&r.__esModule?r:{default:r}},__importStar=this&&this.__importStar||function(r){if(r&&r.__esModule)return r;var t={};if(null!=r)for(var e in r)Object.hasOwnProperty.call(r,e)&&(t[e]=r[e]);return t.default=r,t};Object.defineProperty(exports,"__esModule",{value:!0});const assert_1=__importDefault(require("assert")),errors=__importStar(require("../../errors"));class ProtractorWrapper{async moveMouse(r,t){assert_1.default.fail("[Protractor Helper] moveMouse is not supported yet!")}async dragAndDrop(r,t,e){assert_1.default.fail("[Protractor Helper] dragAndDrop is not supported yet!")}async getControlProperty(r,t){if(!t)throw new errors.GError(errors.GErrorKey.PropertyNameEmpty);try{const e=await this.helper.grabAttributeFrom(r,t);return e instanceof Array?e[0]:e}catch(r){throw r}}async selectByIndex(r,t){assert_1.default.fail("[Protractor Helper] selectByIndex is not supported yet!")}async setState(r,t){t?this.helper.checkOption(r):this.helper.uncheckOption(r)}async scrollIntoView(r,t){assert_1.default.fail("[Protractor Helper] scrollIntoView is not supported yet!")}}exports.ProtractorWrapper=ProtractorWrapper,exports.default=new ProtractorWrapper;
//# sourceMappingURL=../../../debug/helper/wrapper/protractor.js.map
