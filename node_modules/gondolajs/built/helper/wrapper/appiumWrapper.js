"use strict";var __importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t};Object.defineProperty(exports,"__esModule",{value:!0});const errors=__importStar(require("../../errors")),message_1=require("../../message"),util_1=require("../../util"),Utils=__importStar(require("../utils/WebUtils")),ElementNotFound=require("codeceptjs/lib/helper/errors/ElementNotFound"),Locator=require("codeceptjs/lib/locator");class AppiumWrapper{async enter(e,t){var r,i;const a=this.helper.isWeb,s=null===(i=null===(r=this.helper.browser)||void 0===r?void 0:r.capabilities)||void 0===i?void 0:i.browserName;let l;if(!a||!s)return await this.helper.fillField(e,t);try{l=await this.helper._locate(e,!0)}catch(t){throw new ElementNotFound(util_1.getLocatorString(e))}const o=l[0],n=await o.isDisplayed(),p=await o.isEnabled(),c=await o.isClickable();if(!p)throw new errors.GError(errors.GErrorKey.EnterDisableElementErr,e);if(!n||!c)throw new errors.GError(errors.GErrorKey.ElementNotEnabledOrDisplayed,e);return await this.helper.fillField(e,t)}async getControlProperty(e,t){var r;const i=await Utils.findFirstElement(this.helper,e,!0);let a;return this.helper.isWeb&&(null===(r=this.helper.browser)||void 0===r?void 0:r.isMobile)&&(a=await this.helper.executeScript(async(e,t)=>e[t],i,t)),"boolean"==typeof a||"number"==typeof a||a&&("object"!=typeof a||a.length)||(a=await i.getAttribute(t)),a}async getElementBounds(e){return await this.helper.getElementBounds(e)}async selectByIndex(e,t){return await Utils.selectByIndex(this.helper,e,t)}async scrollIntoView(e,t){return await Utils.scrollIntoView(this.helper,e,t)}async setState(e,t){const r=this.helper.browser,i=await Utils.findFirstElement(this.helper,new Locator(e).value);if(!await i.isEnabled())throw new errors.GError(errors.GErrorKey.DisabledElementErr,e);const a=Utils.getElementId(i);!1===await i.isDisplayedInViewport()&&await i.scrollIntoView();await r.isElementSelected(a)!==t&&await r.elementClick(a)}async waitForElementProperty(e,t,r,i,a){const s=await Utils.findFirstElement(this.helper,e);if(!await this.helper.executeScript((e,t)=>void 0!==e[t],s,t))throw new errors.InvalidElementPropertyError(e,t);const l=message_1.format(message_1.localize(errors.GErrorKey.TimeOutForElementHasProptery),e,t,r);await this.helper.browser.waitUntil(async()=>await this.getElementProperty(s,t)===r,1e3*i,l,500)}async waitForValueChanged(e,t,r,i){const a=await Utils.findFirstElement(this.helper,e);if(!await this.helper.executeScript((e,t)=>void 0!==e[t],a,t))throw new errors.InvalidElementPropertyError(e,t);const s=message_1.format(message_1.localize(errors.GErrorKey.TimeoutForValueChange),e,t),l=await this.getElementProperty(a,t);i&&l===i||await this.helper.browser.waitUntil(async()=>await this.getElementProperty(a,t)!==l,1e3*r,s,500)}async getElementProperty(e,t){let r=await e.getAttribute(t);return r||(r=await this.helper.executeScript(async(e,t)=>e[t],e,t)),r}}exports.default=new AppiumWrapper;
//# sourceMappingURL=../../../debug/helper/wrapper/appiumWrapper.js.map
