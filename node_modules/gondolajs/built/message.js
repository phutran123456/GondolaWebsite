"use strict";Object.defineProperty(exports,"__esModule",{value:!0});let locale="en",defaultLocale="en",useDefault=!1,localizations={};function setLocale(e){locale=e}function setDefaultLocale(e){defaultLocale=e}function load(e){if(arguments.length>0&&"number"!=typeof e)if(!1===e)localizations={};else{let o,t,l;for(o in e)if(Object.prototype.hasOwnProperty.call(e,o)){if(t=e[o],o=o.toLowerCase(),o in localizations&&!1!==t||(localizations[o]={}),!1===t)continue;for(l in t)Object.prototype.hasOwnProperty.call(t,l)&&(localizations[o][l]=t[l])}}}function localize(e){const o=useDefault,t=(o?defaultLocale:locale||"").toLowerCase().split("-");let l,a=t.length;useDefault=!1;do{if(l=t.slice(0,a).join("-"),l in localizations&&e in localizations[l])return localizations[l][e]}while(a--);return!o&&defaultLocale?(useDefault=!0,localize(e)):e}function format(e,...o){if(!e.match(/^(?:(?:(?:[^{}]|(?:\{\{)|(?:\}\}))+)|(?:\{[0-9]+\}))+$/))throw new Error("invalid format string.");return e.replace(/((?:[^{}]|(?:\{\{)|(?:\}\}))+)|(?:\{([0-9]+)\})/g,(e,t,l)=>{if(t)return t.replace(/(?:{{)|(?:}})/g,e=>e[0]);if(l>=o.length)throw new Error("argument index is out of range in format");return o[l]})}exports.setLocale=setLocale,exports.setDefaultLocale=setDefaultLocale,exports.load=load,exports.localize=localize,exports.format=format;
//# sourceMappingURL=../debug/message.js.map
