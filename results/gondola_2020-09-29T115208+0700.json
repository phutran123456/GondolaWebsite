{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2020-09-29T04:51:59.156Z",
    "end": "2020-09-29T04:52:08.065Z",
    "duration": 8909,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 1,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "88aab603-577f-478b-8577-bfbc6f62b9ae",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d787020b-cf3f-41ab-9799-92717f705547",
          "title": "Reminder Page after login without active account",
          "fullFile": "F:\\gondolawebsite\\GondolaWebsite\\built\\tests\\reminderPage.js",
          "file": "\\built\\tests\\reminderPage.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite for \"Testcase 02: Check maximum number of clicks on the button “Re-Send” is 3 times per day\"",
              "fullTitle": "Reminder Page after login without active account \"before all\" hook: codeceptjs.beforeSuite for \"Testcase 02: Check maximum number of clicks on the button “Re-Send” is 3 times per day\"",
              "timedOut": false,
              "duration": 8873,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {
                "message": "Error: Could not request headers from https://selenium-release.storage.googleapis.com/3.14/IEDriverServer_x64_3.14.0.zip: Error: getaddrinfo EAI_AGAIN selenium-release.storage.googleapis.com",
                "estack": "Could not request headers from https://selenium-release.storage.googleapis.com/3.14/IEDriverServer_x64_3.14.0.zip: Error: getaddrinfo EAI_AGAIN selenium-release.storage.googleapis.com",
                "diff": null
              },
              "uuid": "c617b8c3-8f6f-4c34-a243-9b53687dc989",
              "parentUUID": "d787020b-cf3f-41ab-9799-92717f705547",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before",
              "fullTitle": "Reminder Page after login without active account \"before each\" hook: codeceptjs.before",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "50e5a265-9037-4016-b840-27494edc52db",
              "parentUUID": "d787020b-cf3f-41ab-9799-92717f705547",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite",
              "fullTitle": "Reminder Page after login without active account \"after all\" hook: codeceptjs.afterSuite",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "679d9aea-e1c9-43b2-8046-94690dc92bc9",
              "parentUUID": "d787020b-cf3f-41ab-9799-92717f705547",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs",
              "fullTitle": "Reminder Page after login without active account \"after each\" hook: finalize codeceptjs",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "278c9c52-0531-4449-bb1a-beaffbe24357",
              "parentUUID": "d787020b-cf3f-41ab-9799-92717f705547",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Testcase 02: Check maximum number of clicks on the button “Re-Send” is 3 times per day",
              "fullTitle": "Reminder Page after login without active account: Testcase 02: Check maximum number of clicks on the button “Re-Send” is 3 times per day",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await thankyouPage_1.default.navigateTo();\nawait thankyouPage_1.default.openLink(thankyouPage_1.default.lnkHeaderLogIn);\nawait loginPage_1.default.login(datatest_1.datatest.username_nonactive, datatest_1.datatest.password_nonactive);\nawait thankyouPage_1.default.verifyNotificationBar();\nawait thankyouPage_1.default.openLink(thankyouPage_1.default.btActiveNotify);\nawait remindPage_1.default.openPage(remindPage_1.default.lnkHere);\nawait gondolajs_1.gondola.enter(resendEmailPage_1.default.txtEmail, datatest_1.datatest.username_nonactive);\nlet i = 1;\nwhile (i <= 4) {\n    await gondolajs_1.gondola.click(resendEmailPage_1.default.btResendActiveEmail);\n    await gondolajs_1.gondola.checkControlExist(datatest_1.datatest.messageResendEmail);\n    //get message\n    if (await gondolajs_1.gondola.doesControlExist(resendEmailPage_1.default.txtMessage)) {\n        await gondolajs_1.gondola.checkText(resendEmailPage_1.default.txtMessage, datatest_1.datatest.warningActiveCode);\n    }\n    else if (i === 4) {\n        await gondolajs_1.gondola.checkEqual(false, true, \"Message still not appears after retry 3 times\");\n    }\n    i++;\n}",
              "err": {},
              "uuid": "bbcf956c-a9fc-4e85-9965-5cb011bf3521",
              "parentUUID": "d787020b-cf3f-41ab-9799-92717f705547",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "bbcf956c-a9fc-4e85-9965-5cb011bf3521"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "gondola",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "results",
        "inlineAssets": true,
        "timestamp": "isoDateTime",
        "reportFilename": "gondola",
        "autoOpen": true,
        "reportPageTitle": "Gondola Test Result"
      },
      "version": "4.1.0"
    }
  }
}